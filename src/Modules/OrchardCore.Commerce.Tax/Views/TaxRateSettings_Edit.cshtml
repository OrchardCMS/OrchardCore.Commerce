@model TaxRateSettings

@{
    const string regexDocsUrl = "https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions";

    const string blockName = "taxRateSettings";
    const string tableElement = blockName + "__table";
    const string addButtonElement = blockName + "__addButton";

    var blockGuid = Guid.NewGuid().ToString("N");
    var tableElementId = $"{tableElement}_{blockGuid}";
    var addButtonElementId = $"{addButtonElement}_{blockGuid}";
}

<h2>@T["Recipients and Tax Codes"]</h2>

<table id="@tableElementId" class="table @tableElement">
    <thead>
    <tr>
        <th>@T["First street address"]</th>
        <th>@T["Second street address"]</th>
        <th>@T["City"]</th>
        <th>@T["State or province code"]</th>
        <th>@T["Postal code"]</th>
        <th>@T["Country or region code"]</th>
        <th>@T["Tax Code"]</th>
        <th>@T["Tax Rate (%)"]</th>
        <th>@T["Actions"]</th>
    </tr>
    </thead>

    <tbody>
    <tr v-for="(rate, index) in rates">
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationStreetAddress1'" v-model="rate.destinationStreetAddress1">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationStreetAddress2'" v-model="rate.destinationStreetAddress2">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationCity'" v-model="rate.destinationCity">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationProvince'" v-model="rate.destinationProvince">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationPostalCode'" v-model="rate.destinationPostalCode">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].DestinationRegion'" v-model="rate.destinationRegion">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].TaxCode'" v-model="rate.taxCode">
        </td>
        <td>
            <input :name="'ISite.Rates[' + index + '].TaxRate'" v-model="rate.taxRate" type="number" min="0" max="100" step="0.001">
        </td>
        <td>
            <button class="btn btn-danger" @@click.prevent="rates.splice(index, 1)">
                <i class="fa fa-trash" aria-hidden="true"></i>
            </button>
            <button class="btn btn-secondary"
                    :disabled="index + 1 == rates.length"
                    @@click.prevent="rates.splice(index, 2, rates[index + 1], rate)">
                <i class="fa fa-arrow-down" aria-hidden="true"></i>
            </button>
            <button class="btn btn-secondary"
                    :disabled="index == 0"
                    @@click.prevent="rates.splice(index - 1, 2, rates[index - 1], rate)">
                <i class="fa fa-arrow-up" aria-hidden="true"></i>
            </button>
        </td>
    </tr>
    </tbody>
</table>

<div class="mb-3">
    <span class="hint">
        @T["All text fields in the table have to be either empty or contain a valid regular expression."]
        @T["Learn more about regular expressions in .NET <a href=\"{0}\">here</a>.", regexDocsUrl]
    </span>
</div>

<button id="@addButtonElementId" class="@addButtonElement btn btn-secondary mb-3">@T["Add Row"]</button>

<script at="Head" asp-name="vuejs"></script>
<script at="Foot" depends-on="vuejs">
const vueQuery = '#@tableElementId tbody';
const rates = @Json.Serialize(Model.Rates);

var table = new Vue({
    el: vueQuery,
    data: { rates: rates },
});

document.getElementById(@addButtonElementId.JsonHtmlContent()).addEventListener('click', function (event) {
    event.preventDefault();
    table.rates.push({
        "destinationStreetAddress1": null,
        "destinationStreetAddress2": null,
        "destinationCity": null,
        "destinationProvince": null,
        "destinationPostalCode": null,
        "destinationRegion": null,
        "taxCode": null,
        "taxRate": 0
    });
});
</script>
