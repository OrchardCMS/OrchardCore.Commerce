@using Newtonsoft.Json
@using OrchardCore.Commerce.Abstractions.Fields
@using OrchardCore.Commerce.AddressDataType
@model AddressFieldEditorViewModel

@{
    var namePrefix = Model.CityName[..^(nameof(Address.City).Length)];
    var idPrefix = namePrefix.Replace('.', '_');

    var namePrefixWithoutAddress = namePrefix[..^((nameof(AddressField.Address)).Length + 1)];
    var idPrefixWithoutAddress = namePrefixWithoutAddress.Replace('.', '_');

    var address = Model.AddressField?.Address;

    var province = address?.Province ?? string.Empty;

    var regions = Model.Regions.Select(region =>
        {
            region.Selected = region.Value == address?.Region;
            return region;
        });
}

<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.Name))">@T["Name *"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.Name))"
               name="@(namePrefix + nameof(Address.Name))"
               value="@address?.Name"
               class="form-control content-preview-text address__name"
               required />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.Department))">@T["Department"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.Department))"
               name="@(namePrefix + nameof(Address.Department))"
               value="@address?.Department"
               class="form-control content-preview-text address__department" />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.Company))">@T["Company or institution"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.Company))"
               name="@(namePrefix + nameof(Address.Company))"
               value="@address?.Company"
               class="form-control content-preview-text address__company" />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.StreetAddress1))">@T["First street address *"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.StreetAddress1))"
               name="@(namePrefix + nameof(Address.StreetAddress1))"
               value="@address?.StreetAddress1"
               class="form-control content-preview-text address__street address__street_first"
               required />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.StreetAddress2))">@T["Second street address"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.StreetAddress2))"
               name="@(namePrefix + nameof(Address.StreetAddress2))"
               value="@address?.StreetAddress2"
               class="form-control content-preview-text address__street address__street_second" />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.City))">@T["City *"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.City))"
               name="@(namePrefix + nameof(Address.City))"
               value="@address?.City"
               class="form-control content-preview-text address__city"
               required />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.Province))">@T["State or province"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <select id="@(idPrefix + nameof(Address.Province))"
                name="@(namePrefix + nameof(Address.Province))"
                value="@address?.Province"
                class="form-control content-preview-text address__province"
                required></select>
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.PostalCode))">@T["Postal code"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <input type="text"
               id="@(idPrefix + nameof(Address.PostalCode))"
               name="@(namePrefix + nameof(Address.PostalCode))"
               value="@address?.PostalCode"
               class="form-control content-preview-text address__postalCode" />
    </div>
</div>
<div class="row">
    <div class="mb-3 col-md-12">
        <label for="@(idPrefix + nameof(Address.Region))">@T["Country or region"]</label>
    </div>
    <div class="mb-3 col-md-6">
        <select id="@(idPrefix + nameof(Address.Region))"
                name="@(namePrefix + nameof(Address.Region))"
                asp-items="regions"
                class="form-control content-preview-text address__region"
                required></select>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.AddressField?.UserAddressToSave))
{
    <input type="hidden"
           id="@(idPrefixWithoutAddress + nameof(AddressField.UserAddressToSave))"
           name="@(namePrefixWithoutAddress + nameof(AddressField.UserAddressToSave))"
           value="@Model.AddressField.UserAddressToSave"
           class="address__userAddressToSave" />
    <div class="mb-3">
        <div class="form-check">
            <input type="checkbox"
                   class="form-check-input content-preview-select address__toBeSaved"
                   data-val="true"
                   value="true"
                   id="@(idPrefixWithoutAddress + nameof(AddressFieldViewModel.ToBeSaved))"
                   name="@(namePrefixWithoutAddress + nameof(AddressFieldViewModel.ToBeSaved))">
            <input name="@(namePrefixWithoutAddress + nameof(AddressFieldViewModel.ToBeSaved))" type="hidden" value="false">
            <label class="form-check-label" for="@(idPrefixWithoutAddress + nameof(AddressFieldViewModel.ToBeSaved))">
                @T["Save this address"]
            </label>
        </div>
    </div>
}

<script asp-name="@ResourceNames.CommerceRegions" at="Foot"></script>
<script at="Foot" depends-on="@ResourceNames.CommerceRegions">
    @if (Context.Items["commerce-regions-initialized"] == null)
    {
        <text>commerceRegionsInitialize(@Html.Raw(JsonConvert.SerializeObject(Model.Provinces)));</text>
        Context.Items["commerce-regions-initialized"] = true;
    }

    commerceRegionsBind(
        '#@(idPrefix + nameof(Address.Province))',
        '.row',
        '#@(idPrefix + nameof(Address.Region))',
        @province.JsonHtmlContent());
</script>
