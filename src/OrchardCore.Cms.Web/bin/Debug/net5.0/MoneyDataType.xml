<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MoneyDataType</name>
    </assembly>
    <members>
        <member name="T:Money.Abstractions.ICurrency">
            <summary>
            Currency representation
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrency.Symbol">
            <summary>
            The symbol for the currency, usually a single character
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrency.NativeName">
            <summary>
            The full native name of the currency
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrency.EnglishName">
            <summary>
            The full english name of the currency
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrency.CurrencyIsoCode">
            <summary>
            The three-letter ISO 4217 code for the currency if it exists
            (for non-standardized crypto-currencies for example, follow usage)
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrency.DecimalPlaces">
            <summary>
            The number of significant decimal places after the decimal separator
            </summary>
        </member>
        <member name="M:Money.Abstractions.ICurrency.ToString(System.Decimal)">
            <summary>
            Formats an amount of the currency
            </summary>
            <param name="amount">The amount</param>
            <returns>The formatted amount of the currency</returns>
        </member>
        <member name="T:Money.Abstractions.ICurrencyProvider">
            <summary>
            A service that provides a set of currencies
            </summary>
        </member>
        <member name="P:Money.Abstractions.ICurrencyProvider.Currencies">
            <summary>
            The list of currencies
            </summary>
        </member>
        <member name="M:Money.Abstractions.ICurrencyProvider.GetCurrency(System.String)">
            <summary>
            Finds the currency object for the provided symbol 
            </summary>
            <param name="isoCode">The three-letter ISO 4217 code for the currency</param>
            <returns>The currency object</returns>
        </member>
        <member name="M:Money.Abstractions.ICurrencyProvider.IsKnownCurrency(System.String)">
            <summary>
            Returns true if the <see cref="P:Money.Currency.CurrencyIsoCode"/> is registered in 
            this provider instance, otherwise false 
            </summary>
            <param name="isoCode"></param>
            <returns></returns>
        </member>
        <member name="T:Money.Amount">
            <summary>
            A money amount, which is represented by a decimal number and a currency
            </summary>
        </member>
        <member name="M:Money.Amount.#ctor(System.Decimal,Money.Abstractions.ICurrency)">
            <summary>
            Constructs a new money amount
            </summary>
            <param name="value">The decimal value</param>
            <param name="currency">The currency</param>
        </member>
        <member name="P:Money.Amount.Value">
            <summary>
            The decimal value
            </summary>
        </member>
        <member name="P:Money.Amount.Currency">
            <summary>
            The currency
            </summary>
        </member>
        <member name="T:Money.CurrencyProvider">
            <summary>
            A simple currency provider that uses a static list of the most common predefined currencies
            </summary>
        </member>
    </members>
</doc>
