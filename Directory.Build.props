<Project>
  <!-- Default TFMs to use when building and packaging -->
  <PropertyGroup>

    <!-- TFM used when coding in Visual Studio and when creating templates -->
    <!-- All 'template.json' should provide a 'choice' for the default TFM -->
    <DefaultTargetFramework Condition="'$(DefaultTargetFramework)' == ''">net9.0</DefaultTargetFramework>

    <!-- TFMs used to build the abstractions and modules, by convention the default TFM is at the first position -->
    <!-- In a cross-targeting build, some assets are only copied on the first TFM, by convention the default TFM -->
    <CommonTargetFrameworks Condition="'$(CommonTargetFrameworks)' == ''">net8.0;net9.0</CommonTargetFrameworks>
  </PropertyGroup>

  <!-- Detect if the solution is opened in VS to limit the TFMs that are analyzed by Roslyn for performance reasons -->
  <PropertyGroup Condition="'$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingByReSharper)' == 'true'">
    <CommonTargetFrameworks>$(DefaultTargetFramework)</CommonTargetFrameworks>
  </PropertyGroup>

  <!-- Uncomment this to run .NET static code analyzers during rebuilds. -->
  <!--<PropertyGroup>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
  </PropertyGroup>-->

  <ItemGroup>
    <PackageReference Condition="!Exists($(LombiqAnalyzersPath))" Include="Lombiq.Analyzers.OrchardCore">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Copying the Orchard logo as an icon to all NuGet-published projects. -->
  <Target Name="Copy NuGet icon"
          AfterTargets="AfterResolveReferences"
          Condition="'$(PackageIcon)' == 'OrchardCoreIcon.png' AND !Exists('$(ProjectDir)OrchardCoreIcon.png')">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)OrchardCoreIcon.png"
          DestinationFiles="$(ProjectDir)OrchardCoreIcon.png"
          SkipUnchangedFiles="true" />
  </Target>

  <!-- Inherit parent props file if one exists. -->
  <Import Condition="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../')) != ''"
          Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />
</Project>
